/**
 * This code is used in functions.php file to restrict access to the WP dashboard. It redirects the login to a custom page, checks user permissions and then hides the admin bar for all non-admin users, and hides the backend from all non-admin users.
 *
 */ 



/**
 * Hide admin bar for all non-admin users
 *
 */ 
 
	if ( ! current_user_can( 'manage_options' ) ) {
    show_admin_bar( false );
}

add_filter( 'login_url', 'custom_login_url', 10, 3 );
/**
 * Filters the login URL.
 *
 * @since 2.8.0
 * @since 4.2.0 The `$force_reauth` parameter was added.
 *
 * @param string $login_url    The login URL. Not HTML-encoded.
 * @param string $redirect     The path to redirect to on login, if supplied.
 * @param bool   $force_reauth Whether to force reauthorization, even if a cookie is present.
 *
 * @return string
 */
function custom_login_url( $login_url, $redirect, $force_reauth ){
    // This will append /launch/ to your main site URL as configured in general settings (ie https://domain.com/launch/)
    $login_url = site_url( '/launch/', 'login' );
    if ( ! empty( $redirect ) ) {
        $login_url = add_query_arg( 'redirect_to', urlencode( $redirect ), $login_url );
    }
    if ( $force_reauth ) {
        $login_url = add_query_arg( 'reauth', '1', $login_url );
    }
    return $login_url;
}

/**
 * Restrict access to the administration screens.
 *
 * Only administrators will be allowed to access the admin screens,
 * all other users will be automatically redirected to the front of
 * the site instead.
 *
 * We do allow access for Ajax requests though, since these may be
 * initiated from the front end of the site by non-admin users.
 */
function restrict_admin_with_redirect() {

	if ( ! current_user_can( 'manage_options' ) && ( ! wp_doing_ajax() ) ) {
		wp_safe_redirect( site_url( '/manage/', 'https' )); 
		exit;
	}
}

add_action( 'admin_init', 'restrict_admin_with_redirect', 1 );

?>
